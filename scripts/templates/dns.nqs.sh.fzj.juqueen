#!/bin/sh
#
#@ job_type = bluegene
#@ environment = COPY_ALL
#@ notify_user = juan-pedro.mellado@mpimet.mpg.de
#@ notification = always
#@ bg_connectivity = TORUS
#@ bg_rotate = TRUE
########################### CHANGE ONLY THIS ###############################
########################### END LSF DIRECTIVES #############################
#@ queue
############################################################################
########################### DO NOT MODIFY ##################################
export TOOLS_HOME=$HOME/bin

export PATH=$PATH:$TOOLS_HOME
export CONFIG_FILE=$TOOLS_HOME/CONFIG.default

. $CONFIG_FILE

ABORT="no"

# Change this to reflect your directories
LOCALDIR=$WORK/$JOBDIR
TRASHDIR=$WORK/$JOBDIR-transfered

# Create Working Directories
mkdir -p $LOCALDIR

cd $LOCALDIR

dns.pre $LOCALDIR $STEP

touch *

# Prepare communication mode
if [ $COMMMODE = "nonblocking" ];then
    export PAMID_VERBOSE=1
    export PAMID_ASYNC_PROGRESS=0
    export PAMID_CONTEXT_POST=1
#export PAMI_MEMORY_OPTIMIZED=1  # was 1 [cedrick]
#export PAMID_DISABLE_INTERNAL_EAGER_TASK_LIMIT=1
#export PAMID_EAGER=4097 #was 4097
#export PAMID_EAGER_LOCAL=4097
    export PAMID_RMA_PENDING=1000 #was 1000
    export PAMID_NUMREQUESTS=32 #was 32
#export OMP_WAIT_POLICY=active
    export OMP_MAX_ACTIVE_LEVELS=1
    export OMP_NESTED=FALSE
#export OMP_MAX_ACTIVE_LEVELS=2
#export OMP_NESTED=TRUE

    export OMP_NUM_THREADS=2 # number of threads per task
    export OMP_MAX_THREADS=2

# prepare mapping file and partition information
    runjob --ranks-per-node ${RANKSPERNODE} : /bgsys/local/samples/personality/personality.elf > partinfos.txt 
    export MY_BG_SHAPE=`grep 'block shape' partinfos.txt | awk 'BEGIN { FS = "<" } ; { print $2 }' | awk 'BEGIN { FS = ">" } ; { print $1 }' | sed -r 's/[,]+/x/g'`
    python $TOOLS_HOME/trans2map.py -s ${MY_BG_SHAPE} -n ${RANKSPERNODE} -m mapping.txt

    MAPPING_FILE=mapping.txt
fi
    export OMP_NUM_THREADS=2 # number of threads per task
    export OMP_MAX_THREADS=2


# Run Simulation
case $RUNMODE in
  "preprocess" )
    preprocess $TIMESTAMP $NP $RANKSPERNODE
    ABORT="yes"
    ;;
  "simulation" )
    simulation $TIMESTAMP $NP $RANKSPERNODE $MAPPIMG_FILE
    if [ $? -ne 0 ]; then
       ABORT="yes"
    fi 
    ;;
  "postprocess" )
    postprocess $TIMESTAMP $NP $RANKSPERNODE
    ABORT="yes"
  ;;
esac

# Abort on several errors
if [ -f tlab.err ]; then
    ABORT="yes"
fi
	
if [ -f tlab.err.0 ]; then
    ABORT="yes"
fi

stat -t core* >/dev/null 2>&1 && ABORT="yes"

#clean 
if [ -f tlab.ini ]; then
    cp tlab.ini tlab.ini-$TIMESTAMP
fi
LOGFILES="tlab.ini.bak tlab.log dns.out dns.les partinfos.txt mapping.txt"
for FILE in $LOGFILES; do
    if [ -f $FILE ]; then
        mv $FILE $FILE-$TIMESTAMP
    fi
done

# Organize statistics
STATSDIR=stats-$TIMESTAMP
if [ ! -e $STATSDIR ]; then
    mkdir $STATSDIR

    if [ -f tlab.ini ]; then
	cp tlab.ini $STATSDIR
    fi

    LIST=`ls | egrep 'avg[0-9]|?cr[0-9]|?sp[0-9]|pdf[0-9]|cavgXi[0-9]|pdfXi[0-9]|int[0-9]|kin[0-9]'`
    echo "Moving statistic files into $STATSDIR"
    if [ -n "$LIST" ]; then
       mv $LIST $STATSDIR
    fi

else
    echo "$STATSDIR exists. Aborting"

fi

if [ $RUNMODE = "simulation" ];then

# Requeue simulation
    if [ $ABORT = "no" ]; then
	if [ -f $LOCALDIR/dns.nqs.new-vars ]; then
	    . $LOCALDIR/dns.nqs.new-vars
	fi

	if [ -f $LOCALDIR/tlab.ini ]; then
	    ITIME=`awk -F"=" '{ 
				if ( $1 == "End" ) 
				    {
				    print $2 
				    }
			    }' $LOCALDIR/tlab.ini` 
	else
	    echo "Error getting max time"
	    exit 1
	fi
 
	if [ $ITIME -lt $MAXITER ]; then
	    # Submit Script
	    qsend -name $NAME -time $TIME -maxiter $MAXITER -mem $MEM \
	          -script $SCRIPT -jobdir $JOBDIR -step $STEP -np $NP -rankspernode $RANKSPERNODE -commmode $COMMMODE

	fi       
    fi
fi

